"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

import rest_framework
from rest_framework import authentication

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost", "127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',

    #Plugins
    'readtable',
    'rest_framework.authtoken',
    'django_filters',
    'django_crontab',
    'drf_yasg',

    #Apps
    'user',
    'productlist',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': BASE_DIR.joinpath('caches'),
        'TIMEOUT':None,
        'OPTIONS': {
            'server_max_value_length': 1024 * 1024 * 1024,
        }
    },
    'marketprice': {
        'BACKEND': 'django.core.cache.backends.memcached.PyMemcacheCache',
        'LOCATION': os.environ.get("CACHE_IP"),
        'TIMEOUT':None,
    },
} 

WSGI_APPLICATION = 'api.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'readtable.authentication.SpecialAuthentication'
    ],
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
STATIC_ROOT = os.path.join(BASE_DIR,"staticfiles")

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        #'CONN_MAX_AGE': 6000,
        'NAME': os.environ.get("DB_NAME"),
        'USER':os.environ.get("DB_USER"),
        'PASSWORD':os.environ.get("PASSWORD"),
        'HOST':os.environ.get("DB_HOST"),
        'PORT':'3306',
        'OPTIONS':{
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
            }
        },
    'main': {
        'ENGINE': 'django.db.backends.mysql',
        #'CONN_MAX_AGE': 6000,
        'NAME': os.environ.get("DB_MAIN_NAME"),
        'USER':os.environ.get("DB_MAIN_USER"),
        'PASSWORD':os.environ.get("DB_MAIN_PASSWORD"),
        'HOST':os.environ.get("DB_HOST"),
        'PORT':'3306',
         'OPTIONS':{
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
        }
    }
}

DATABASE_ROUTERS = [
    'readtable.router.ChangeRouter'
]


from django.templatetags.static import static
from django.utils.functional import lazy
from django.urls import reverse_lazy
static_lazy = lazy(static, str)

# drf-yasg
SWAGGER_SETTINGS = {

    'LOGIN_URL': reverse_lazy('admin:login'),
    'LOGOUT_URL': '/admin/logout',
    'PERSIST_AUTH': True,
    'OPERATIONS_SORT': None,
    'REFETCH_SCHEMA_WITH_AUTH': True,
    'REFETCH_SCHEMA_ON_LOGOUT': True,
    'DEFAULT_INFO': 'api.urls.swagger_info',
    'SECURITY_DEFINITIONS': {
      'Basic': {
            'type': 'basic'
      }
   },
    "DEFAULT_PAGINATOR_INSPECTORS": [
        'api.inspectors.UnknownPaginatorInspector',
        'drf_yasg.inspectors.DjangoRestResponsePagination',
        'drf_yasg.inspectors.CoreAPICompatInspector',
    ]
}

REDOC_SETTINGS = {
    'SPEC_URL': ('schema-json', {'format': '.json'}),
    'LAZY_RENDERING': False,
}

CRONJOBS = [
    ('00 2 * * *', 'readtable.query.fullmap','>>api_map.log'),
    ('00 2 * * *', 'readtable.query.fullfao','>>api_fao.log'),
    ('00 2 * * *', 'readtable.query.fullusda','>>api_usda.log'),
    ('00 2 * * *', 'readtable.query.fulltufe','>>api_tufe.log'),
    ('00 2 * * *', 'readtable.query.fullufe','>>api_tufe.log'),
    ('00 2 * * *', 'readtable.query.fulltuik','>>api_tuik.log'),
    ('00 2 * * *', 'readtable.query.fullworldagriculture','>>api_worldagriculture.log'),
    ('00 2 * * *', 'readtable.query.fulltuikexternal','>>api_tuikexternal.log'),
    ('00 3 * * *', 'productlist.cron.makelist','>>api_make_list.log'),

    ('50 15 * * *', 'readtable.query.fullmarketprices','>>marketprices.log'),
    ('00 16 * * *', 'readtable.caches.productmarketcaches','>>querymarket.log'),
    ('00 16 * * *', 'productlist.cron.fullproductpricelist','>>api_product_list.log'),
]